{"ast":null,"code":"/** @format */\n\n// actions.js\nexport const fetchStockData = ticker => {\n  return async dispatch => {\n    try {\n      // Make API call to backend\n      const response = await fetch(`/api/stocks/${ticker}`);\n      const data = await response.json();\n\n      // Dispatch action with fetched data\n      dispatch({\n        type: \"FETCH_STOCK_DATA_SUCCESS\",\n        payload: data\n      });\n    } catch (error) {\n      // Handle error\n      dispatch({\n        type: \"FETCH_STOCK_DATA_FAILURE\",\n        payload: error.message\n      });\n    }\n  };\n};","map":{"version":3,"names":["fetchStockData","ticker","dispatch","response","fetch","data","json","type","payload","error","message"],"sources":["/Users/davidro/Documents/Portrati Coding Challenge/stocktracker/src/redux/actions.js"],"sourcesContent":["/** @format */\n\n// actions.js\nexport const fetchStockData = (ticker) => {\n  return async (dispatch) => {\n    try {\n      // Make API call to backend\n      const response = await fetch(`/api/stocks/${ticker}`);\n      const data = await response.json();\n\n      // Dispatch action with fetched data\n      dispatch({ type: \"FETCH_STOCK_DATA_SUCCESS\", payload: data });\n    } catch (error) {\n      // Handle error\n      dispatch({ type: \"FETCH_STOCK_DATA_FAILURE\", payload: error.message });\n    }\n  };\n};\n"],"mappings":"AAAA;;AAEA;AACA,OAAO,MAAMA,cAAc,GAAIC,MAAM,IAAK;EACxC,OAAO,MAAOC,QAAQ,IAAK;IACzB,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,eAAcH,MAAO,EAAC,CAAC;MACrD,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;MAElC;MACAJ,QAAQ,CAAC;QAAEK,IAAI,EAAE,0BAA0B;QAAEC,OAAO,EAAEH;MAAK,CAAC,CAAC;IAC/D,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd;MACAP,QAAQ,CAAC;QAAEK,IAAI,EAAE,0BAA0B;QAAEC,OAAO,EAAEC,KAAK,CAACC;MAAQ,CAAC,CAAC;IACxE;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}